(dp0
S'wavelet_clamped_parallel'
p1
I00
sS'wavelet_clamped_splitfactor_1_y'
p2
I4
sS'wavelet_clamped_splitfactor_1_x'
p3
I4
sS'inv_daub_x_splitfactor_1_y'
p4
I4
sS'inv_daub_x_vectorize'
p5
I4
sS'wavelet_clamped_vectorize'
p6
I1
sS'schedule'
p7
(lp8
(Vwavelet_clamped
p9
S's'
p10
tp11
a(Vinv_daub_x
p12
g10
tp13
a(g12
I4
tp14
a(g12
I3
tp15
a(g9
I6
tp16
a(g9
I5
tp17
a(g9
I4
tp18
a(g9
I3
tp19
a(g9
I2
tp20
a(g9
I1
tp21
a(g9
S'c'
p22
tp23
a(g12
I2
tp24
a(g12
I1
tp25
a(g12
g22
tp26
asS'inv_daub_x_store_order_enabled'
p27
I00
sS'inv_daub_x_unroll'
p28
I8
sS'wavelet_clamped_store_order'
p29
(lp30
Vy
p31
aVx
p32
aVc
p33
asS'inv_daub_x_store_order'
p34
(lp35
Vy
p36
aVx
p37
asS'inv_daub_x_parallel'
p38
I00
sS'wavelet_clamped_unroll'
p39
I1
sS'wavelet_clamped_store_order_enabled'
p40
I00
sS'wavelet_clamped_splitfactor_1_c'
p41
I1
sS'inv_daub_x_splitfactor_1_x'
p42
I4
sS'wavelet_clamped_compute_order'
p43
(lp44
(Vc
p45
I0
tp46
a(Vx
p47
I0
tp48
a(Vc
p49
I1
tp50
a(Vy
p51
I0
tp52
a(Vx
p53
I1
tp54
a(Vy
p55
I1
tp56
asS'inv_daub_x_compute_order'
p57
(lp58
(Vx
p59
I0
tp60
a(Vy
p61
I0
tp62
a(Vy
p63
I1
tp64
a(Vx
p65
I1
tp66
as.